/*! SmartAdmin - v1.4.0 - 2014-06-04 */
$(function() {
    $("#ribbon").append('<div class="demo"><span id="demo-setting"><i class="fa fa-cog txt-color-blueDark"></i></span> <form><legend class="no-padding margin-bottom-10">布局选项</legend><section><label><input name="subscription" id="smart-fixed-header" type="checkbox" class="checkbox style-0"><span>固定页头</span></label><label><input type="checkbox" name="terms" id="smart-fixed-navigation" class="checkbox style-0"><span>固定导航条</span></label><label><input type="checkbox" name="terms" id="smart-fixed-ribbon" class="checkbox style-0"><span>固定导航菜单</span></label><label><input type="checkbox" name="terms" id="smart-fixed-footer" class="checkbox style-0"><span>固定页脚</span></label><label><input type="checkbox" name="terms" id="smart-fixed-container" class="checkbox style-0"><span>固定宽度</span><div class="font-xs text-right">(无响应式支持)</div></span></label><label style="display:block;"><input type="checkbox" id="smart-topmenu" class="checkbox style-0"><span>头部菜单</span></label> <span id="smart-bgimages"></span></section><section><h6 class="margin-top-10 semi-bold margin-bottom-5">清空本地存储</h6><a href="javascript:void(0);" class="btn btn-xs btn-block btn-primary" id="reset-smart-widget"><i class="fa fa-refresh"></i>部件重置</a></section> <div id="skinew"><h6 class="margin-top-10 semi-bold margin-bottom-5">皮肤</h6><section id="smart-styles"><a href="javascript:void(0);" id="smart-style-4" data-skinlogo="img/logo-pale.png" class="btn btn-xs btn-block txt-color-white margin-top-5" style="background:#428bca"><i class="fa fa-check fa-fw" id="skin-checked"></i>默认</a><a href="javascript:void(0);" id="smart-style-0" data-skinlogo="img/logo.png" class="btn btn-block btn-xs txt-color-white margin-right-5" style="background-color:#4E463F;">黑色</a><a href="javascript:void(0);" id="smart-style-1" data-skinlogo="img/logo-white.png" class="btn btn-block btn-xs txt-color-white" style="background:#3A4558;">深色</a><a href="javascript:void(0);" id="smart-style-2" data-skinlogo="img/logo-blue.png" class="btn btn-xs btn-block txt-color-darken margin-top-5" style="background:#fff;">浅色</a><a href="javascript:void(0);" id="smart-style-3" data-skinlogo="img/logo-pale.png" class="btn btn-xs btn-block txt-color-white margin-top-5" style="background:#f78c40">时尚</a></div></section></form> </div>');
    // hide bg options
    var smartbgimage = "<h6 class='margin-top-10 semi-bold'>背景</h6><img src='img/pattern/graphy-xs.png' data-htmlbg-url='img/pattern/graphy.png' width='22' height='22' class='margin-right-5 bordered cursor-pointer'><img src='img/pattern/tileable_wood_texture-xs.png' width='22' height='22' data-htmlbg-url='img/pattern/tileable_wood_texture.png' class='margin-right-5 bordered cursor-pointer'><img src='img/pattern/sneaker_mesh_fabric-xs.png' width='22' height='22' data-htmlbg-url='img/pattern/sneaker_mesh_fabric.png' class='margin-right-5 bordered cursor-pointer'><img src='img/pattern/nistri-xs.png' data-htmlbg-url='img/pattern/nistri.png' width='22' height='22' class='margin-right-5 bordered cursor-pointer'><img src='img/pattern/paper-xs.png' data-htmlbg-url='img/pattern/paper.png' width='22' height='22' class='bordered cursor-pointer'>";

    $("#smart-bgimages").fadeOut(),
$("#demo-setting").click(function() {
    $("#ribbon .demo").toggleClass("activate")
}),
    /*
    * FIXED HEADER
    */

$('input[type="checkbox"]#smart-fixed-header').click(function() {
    if ($(this).is(":checked")) {
        $.root_.addClass("fixed-header");
        //在这存下这个cookie 的代码  smart-fixed-nav        
        var date = new Date();
        var ms = 24 * 3600 * 365000;
        date.setTime(date.getTime() + ms);
        document.cookie = "checkbox_header=1;expires=" + date.toGMTString();
    }
    else {
        $('input[type="checkbox"]#smart-fixed-ribbon').prop("checked", !1);
        $('input[type="checkbox"]#smart-fixed-navigation').prop("checked", !1);
        $.root_.removeClass("fixed-header");
        $.root_.removeClass("fixed-navigation");
        $.root_.removeClass("fixed-ribbon");
        //在这写删除这个cookie的代码
        var date = new Date();
        var ms = 24 * 3600 * 365000;
        date.setTime(date.getTime() + ms);
        document.cookie = "checkbox_header=0;expires=" + date.toGMTString();
        document.cookie = "checkbox_ribbon=0;expires=" + date.toGMTString();
        document.cookie = "checkbox_nav=0;expires=" + date.toGMTString();
    }
}),


$('input[type="checkbox"]#smart-fixed-navigation').click(function() {
    if ($(this).is(":checked")) {
        $('input[type="checkbox"]#smart-fixed-header').prop("checked", !0);
        $.root_.addClass("fixed-header"), $.root_.addClass("fixed-navigation");
        $('input[type="checkbox"]#smart-fixed-container').prop("checked", !1);
        $.root_.removeClass("container");

        $("#smart-bgimages").fadeOut();
        smartbgimage = null;
        
        //在这存下这个cookie 的代码  smart-fixed-nav
        var date = new Date();
        var ms = 24 * 3600 * 365000;
        date.setTime(date.getTime() + ms);
        document.cookie = "checkbox_nav=1;expires=" + date.toGMTString();
        document.cookie = "checkbox_w=0;expires=" + date.toGMTString();

        document.cookie = "checkbox_container=0;expires=" + date.toGMTString();
        document.cookie = "imgbg=" + '' + ";expires=" + date.toGMTString();
    }
    else {
        $('input[type="checkbox"]#smart-fixed-ribbon').prop("checked", !1);
        $.root_.removeClass("fixed-navigation"), $.root_.removeClass("fixed-ribbon")
        //在这写删除这个cookie的代码
        var date = new Date();
        var ms = 24 * 3600 * 365000;
        date.setTime(date.getTime() + ms);
        document.cookie = "checkbox_nav=0;expires=" + date.toGMTString();
        document.cookie = "checkbox_ribbon=0;expires=" + date.toGMTString();
    }
}),

$('input[type="checkbox"]#smart-fixed-ribbon').click(function() {
    if ($(this).is(":checked")) {
        $('input[type="checkbox"]#smart-fixed-header').prop("checked", !0);
        $('input[type="checkbox"]#smart-fixed-navigation').prop("checked", !0);
        $('input[type="checkbox"]#smart-fixed-ribbon').prop("checked", !0);
        $.root_.addClass("fixed-header");
        $.root_.addClass("fixed-navigation");
        $.root_.addClass("fixed-ribbon");
        $('input[type="checkbox"]#smart-fixed-container').prop("checked", !1);
        $.root_.removeClass("container");
        
        

        $("#smart-bgimages").fadeOut();
        smartbgimage = null;
        //在这存下这个cookie 的代码  smart-fixed-nav
        var date = new Date();
        var ms = 24 * 3600 * 365000;
        date.setTime(date.getTime() + ms);
        
        document.cookie = "checkbox_ribbon=1;expires=" + date.toGMTString();
        document.cookie = "checkbox_nav=1;expires=" + date.toGMTString();
        document.cookie = "checkbox_header=1;expires=" + date.toGMTString();
        document.cookie = "checkbox_w=0;expires=" + date.toGMTString();
        
        document.cookie = "checkbox_container=0;expires=" + date.toGMTString();
        document.cookie = "imgbg=" + '' + ";expires=" + date.toGMTString();
    }
    else {
        $.root_.removeClass("fixed-ribbon");
        //在这写删除这个cookie的代码
        var date = new Date();
        var ms = 24 * 3600 * 365000;
        date.setTime(date.getTime() + ms);
        document.cookie = "checkbox_ribbon=0;expires=" + date.toGMTString();
    }
}),

$('input[type="checkbox"]#smart-fixed-footer').click(function() {
    if ($(this).is(":checked")) {
        $.root_.addClass("fixed-page-footer");
        //在这存下这个cookie 的代码  smart-fixed-nav
        var date = new Date();
        var ms = 24 * 3600 * 365000;
        date.setTime(date.getTime() + ms);
        document.cookie = "checkbox_footer=1;expires=" + date.toGMTString();
    }
    else {
        $.root_.removeClass("fixed-page-footer");
        //在这写删除这个cookie的代码
        var date = new Date();
        var ms = 24 * 3600 * 365000;
        date.setTime(date.getTime() + ms);
        document.cookie = "checkbox_footer=0;expires=" + date.toGMTString();
    }
}),

$('input[type="checkbox"]#smart-rtl').click(function() {
    if ($(this).is(":checked")) {
        $.root_.addClass("smart-rtl");
    }
    else {
        $.root_.removeClass("smart-rtl");
    }
}),

$("#smart-topmenu").on("change",
function() {
    if ($(this).prop("checked")) {
        localStorage.setItem("sm-setmenu", "top");
        location.reload();



    }
    else {
        localStorage.setItem("sm-setmenu", "left"), location.reload();

    }
}),

"top" == localStorage.getItem("sm-setmenu") ? $("#smart-topmenu").prop("checked", !0) : $("#smart-topmenu").prop("checked", !1),




$('input[type="checkbox"]#smart-fixed-container').click(function() {
    if ($(this).is(":checked")) {
        $.root_.addClass("container");
        $('input[type="checkbox"]#smart-fixed-ribbon').prop("checked", !1);
        $.root_.removeClass("fixed-ribbon");
        $('input[type="checkbox"]#smart-fixed-navigation').prop("checked", !1);
        $.root_.removeClass("fixed-navigation");
       
        if (smartbgimage) {
            
            $("#smart-bgimages").append(smartbgimage).fadeIn(1e3);
            $("#smart-bgimages img").bind("click", function() {
                var a = $(this),
      		  b = $("html");
                bgurl = a.data("htmlbg-url"),
       		 b.css("background-image", "url(" + bgurl + ")")
                var date = new Date();
                var ms = 24 * 3600 * 365000;
                date.setTime(date.getTime() + ms);
                document.cookie = "imgbg=" + bgurl + ";expires=" + date.toGMTString();

            });
            smartbgimage = null;
            //在这存下这个cookie 的代码  smart-fixed-navigation，smart-fixed-ribbon
            var date = new Date();
            var ms = 24 * 3600 * 365000;
            date.setTime(date.getTime() + ms);
            document.cookie = "checkbox_container=1;expires=" + date.toGMTString();
            document.cookie = "checkbox_nav=0;expires=" + date.toGMTString();
            document.cookie = "checkbox_ribbon=0;expires=" + date.toGMTString();
        }
        else {
            $("#smart-bgimages").fadeIn(1e3);
            $("#smart-bgimages img").bind("click", function() {
                var a = $(this),
      		  b = $("html");
                bgurl = a.data("htmlbg-url"),
       		 b.css("background-image", "url(" + bgurl + ")")
                var date = new Date();
                var ms = 24 * 3600 * 365000;
                date.setTime(date.getTime() + ms);
                document.cookie = "imgbg=" + bgurl + ";expires=" + date.toGMTString();

            });
            var date = new Date();
            var ms = 24 * 3600 * 365000;
            date.setTime(date.getTime() + ms);
            document.cookie = "checkbox_container=1;expires=" + date.toGMTString();
            document.cookie = "checkbox_nav=0;expires=" + date.toGMTString();
            document.cookie = "checkbox_ribbon=0;expires=" + date.toGMTString();
        }
    }
    else {
        
        $.root_.removeClass("container");
        $("#smart-bgimages").fadeOut();
        smartbgimage = null;
        var date = new Date();
        var ms = 24 * 3600 * 365000;
        date.setTime(date.getTime() + ms);
        document.cookie = "checkbox_container=0;expires=" + date.toGMTString();
        document.cookie = "imgbg=" + '' + ";expires=" + date.toGMTString();
    }
}),



$("#reset-smart-widget").bind("click",
function() {
    return $("#refresh").click(),
    !1
}),


$("#smart-styles > a").on("click",
function() {
    var a = $(this),
    b = $("#logo img");
    $.root_.removeClassPrefix("smart-style").addClass(a.attr("id")),
    b.attr("src", a.data("skinlogo")),
    $("#smart-styles > a #skin-checked").remove(),
    a.prepend("<i class='fa fa-check fa-fw' id='skin-checked'></i>")

    var date = new Date();
    var ms = 24 * 3600 * 365000;
    date.setTime(date.getTime() + ms);
    document.cookie = "skin=" + a.attr("id") + ";expires=" + date.toGMTString();
    document.cookie = "img=" + a.data("skinlogo") + ";expires=" + date.toGMTString();

});
    var cookie1;
    var arr, reg = new RegExp("(^| )checkbox_header=([^;]*)(;|$)");

    if (arr = document.cookie.match(reg))

        cookie1 = arr[2];

    if (cookie1 == 1) {  //有cookie  就执行 勾选checkbox的代码
        $('input[type="checkbox"]#smart-fixed-header')
		  .prop('checked', true);
        $.root_.addClass("fixed-header");
    } else {  //无cookie 就执行取消勾选checkbox的代码
        $('input[type="checkbox"]#smart-fixed-ribbon').prop("checked", !1);
        $('input[type="checkbox"]#smart-fixed-navigation').prop("checked", !1);
        $.root_.removeClass("fixed-header");
        $.root_.removeClass("fixed-navigation");
        $.root_.removeClass("fixed-ribbon");
    }
    var cookie2;
    var arr, reg = new RegExp("(^| )checkbox_nav=([^;]*)(;|$)");

    if (arr = document.cookie.match(reg))

        cookie2 = arr[2];

    if (cookie2 == 1) {  //有cookie  就执行 勾选checkbox的代码
        $('input[type="checkbox"]#smart-fixed-navigation')
	        .prop('checked', true);
        $('input[type="checkbox"]#smart-fixed-header').prop("checked", !0);
        $.root_.addClass("fixed-header"), $.root_.addClass("fixed-navigation");
        $('input[type="checkbox"]#smart-fixed-container').prop("checked", !1);
        $.root_.removeClass("container");
    } else {  //无cookie 就执行取消勾选checkbox的代码
        //unchecked
        $('input[type="checkbox"]#smart-fixed-navigation')
			.prop('checked', false);
        $('input[type="checkbox"]#smart-fixed-ribbon').prop("checked", !1);
        $.root_.removeClass("fixed-navigation"), $.root_.removeClass("fixed-ribbon")
    }
    var cookie3;
    var arr, reg = new RegExp("(^| )checkbox_ribbon=([^;]*)(;|$)");

    if (arr = document.cookie.match(reg))

        cookie3 = arr[2];
    if (cookie3 == 1) {  //有cookie  就执行 勾选checkbox的代码
        $('input[type="checkbox"]#smart-fixed-header').prop("checked", !0);
        $('input[type="checkbox"]#smart-fixed-navigation').prop("checked", !0);
        $('input[type="checkbox"]#smart-fixed-ribbon').prop("checked", !0);
        $.root_.addClass("fixed-header");
        $.root_.addClass("fixed-navigation");
        $.root_.addClass("fixed-ribbon");
        $('input[type="checkbox"]#smart-fixed-container').prop("checked", !1);
        $.root_.removeClass("container");
    } else {  //无cookie 就执行取消勾选checkbox的代码
        //unchecked
        $.root_.removeClass("fixed-ribbon");
    }
    var cookie4;
    var arr, reg = new RegExp("(^| )checkbox_footer=([^;]*)(;|$)");

    if (arr = document.cookie.match(reg))

        cookie4 = arr[2];
    if (cookie4 == 1) {  //有cookie  就执行 勾选checkbox的代码
        $('input[type="checkbox"]#smart-fixed-footer')
	        .prop('checked', true);
        $.root_.addClass("fixed-page-footer");
    } else {  //无cookie 就执行取消勾选checkbox的代码
        //unchecked
        $.root_.removeClass("fixed-page-footer");
    }
    var cookie7;
    var arr, reg = new RegExp("(^| )checkbox_container=([^;]*)(;|$)");

    if (arr = document.cookie.match(reg))

        cookie7 = arr[2];
    if (cookie7 == 1) {  //有cookie  就执行 勾选checkbox的代码

        $('input[type="checkbox"]#smart-fixed-container')
	        .prop('checked', true);
        $.root_.addClass("container");
        $.root_.removeClass("fixed-ribbon");
        $.root_.removeClass("fixed-navigation");
        $("#smart-bgimages").append(smartbgimage).fadeIn(1e3);

        $("#smart-bgimages img").bind("click", function() {
            var a = $(this),
      		  b = $("html");
            bgurl = a.data("htmlbg-url"),
       		 b.css("background-image", "url(" + bgurl + ")")
            var date = new Date();
            var ms = 24 * 3600 * 365000;
            date.setTime(date.getTime() + ms);
            document.cookie = "imgbg=" + bgurl + ";expires=" + date.toGMTString();

        });

        var cookiebg;
        var arr, reg = new RegExp("(^| )imgbg=([^;]*)(;|$)");
        if (arr = document.cookie.match(reg))

            cookiebg = arr[2];
        if (cookiebg != "" && cookiebg != null) {
            var b = $("html");
            b.css("background-image", "url(" + cookiebg + ")")
        }



    } else {  //无cookie 就执行取消勾选checkbox的代码
        //unchecked
        $.root_.removeClass("container");
        $("#smart-bgimages").fadeOut();
    }
    var cookie5;
    var arr, reg = new RegExp("(^| )skin=([^;]*)(;|$)");

    if (arr = document.cookie.match(reg)) {
        cookie5 = arr[2];


        if (cookie5 != null && cookie5 != "") {
            $("#smart-styles > a #skin-checked").remove();
            $('#' + cookie5).prepend("<i class='fa fa-check fa-fw' id='skin-checked'></i>");
            $.root_.removeClassPrefix("smart-style").addClass(cookie5);

        }

    }
    var cookie6;
    var arr, reg = new RegExp("(^| )img=([^;]*)(;|$)");

    if (arr = document.cookie.match(reg))
        cookie6 = arr[2];

    if (cookie6 != null && cookie6 != "") {
        var $logo = $("#logo img");
        $logo.attr('src', cookie6);
    }

});
/*! SmartAdmin - v1.4.0 - 2014-06-04 */
// Impacts the responce rate of some of the responsive elements (lower value affects CPU but improves speed)
    $.throttle_delay = 350;

// The rate at which the menu expands revealing child elements on click
    $.menu_speed = 235;

// Note: You will also need to change this variable in the "variable.less" file.
    $.navbar_height = 49;

    /*
     * APP DOM REFERENCES
     * Description: Obj DOM reference, please try to avoid changing these
     */
    $.root_ = $('body');
    $.left_panel = $('#left-panel');
    $.shortcut_dropdown = $('#shortcut');
    $.bread_crumb = $('#ribbon ol.breadcrumb');

// desktop or mobile
    $.device = null;

    /*
     * APP CONFIGURATION
     * Description: Enable / disable certain theme features here
     */
    $.navAsAjax = true; // Your left nav in your app will no longer fire ajax calls

// Please make sure you have included "jarvis.widget.js" for this below feature to work
    $.enableJarvisWidgets = true;

// Warning: Enabling mobile widgets could potentially crash your webApp if you have too many
// 			widgets running at once (must have $.enableJarvisWidgets = true)
    $.enableMobileWidgets = false;


    /*
     * DETECT MOBILE DEVICES
     * Description: Detects mobile device - if any of the listed device is detected
     * a class is inserted to $.root_ and the variable $.device is decleard.
     */

    /* so far this is covering most hand held devices */
    var ismobile = (/iphone|ipad|ipod|android|blackberry|mini|windows\sce|palm/i.test(navigator.userAgent.toLowerCase()));

    if (!ismobile) {
        // Desktop
        $.root_.addClass("desktop-detected");
        $.device = "desktop";
    } else {
        // Mobile
        $.root_.addClass("mobile-detected");
        $.device = "mobile";

        // Removes the tap delay in idevices
        // dependency: js/plugin/fastclick/fastclick.js
        //FastClick.attach(document.body);
    }

/*
 * VARIABLES
 * Description: All Global Vars
 */

/* ~ END: CHECK MOBILE DEVICE */

/*
 * DOCUMENT LOADED EVENT
 * Description: Fire when DOM is ready
 */

$(document).ready(function() {
    /*
     * Fire tooltips
     */
    if ($("[rel=tooltip]").length) {
        $("[rel=tooltip]").tooltip();
    }


    // COLLAPSE LEFT NAV
    $('.minifyme').click(function(e) {
        $('body').toggleClass("minified");
        $(this).effect("highlight", {}, 500);
        e.preventDefault();
    });

    // HIDE MENU
    $('#hide-menu >:first-child > a').click(function(e) {
        $('body').toggleClass("hidden-menu");
        e.preventDefault();
    });

    $('#show-shortcut').click(function(e) {
        if ($.shortcut_dropdown.is(":visible")) {
            shortcut_buttons_hide();
        } else {
            shortcut_buttons_show();
        }
        e.preventDefault();
    });

    // SHOW & HIDE MOBILE SEARCH FIELD
    $('#search-mobile').click(function() {
        $.root_.addClass('search-mobile');
    });

    $('#cancel-search-js').click(function() {
        $.root_.removeClass('search-mobile');
    });

    // ACTIVITY
    // ajax drop
    $('#activity').click(function(e) {
        var $this = $(this);

        if ($this.find('.badge').hasClass('bg-color-red')) {
            //$this.find('.badge').removeClassPrefix('bg-color-');
			$this.find('.badge').removeClass('bg-color-');
            $this.find('.badge').text("0");
            // console.log("Ajax call for activity")
        }

        if (!$this.next('.ajax-dropdown').is(':visible')) {
            $this.next('.ajax-dropdown').fadeIn(150);
            $this.addClass('active');
        } else {
            $this.next('.ajax-dropdown').fadeOut(150);
            $this.removeClass('active')
        }

        var mytest = $this.next('.ajax-dropdown').find('.btn-group > .active > input').attr('id');
        //console.log(mytest)

        e.preventDefault();
    });

    $('input[name="activity"]').change(function() {
        //alert($(this).val())
        var $this = $(this);

        url = $this.attr('id');
        container = $('.ajax-notifications');

        loadURL(url, container);

    });

    $(document).mouseup(function(e) {
        if (!$('.ajax-dropdown').is(e.target)// if the target of the click isn't the container...
            && $('.ajax-dropdown').has(e.target).length === 0) {
            $('.ajax-dropdown').fadeOut(150);
            $('.ajax-dropdown').prev().removeClass("active")
        }
    });

    $('button[data-loading-text]').on('click', function() {
        var btn = $(this)
        btn.button('loading')
        setTimeout(function() {
            btn.button('reset')
        }, 3000)
    });

    // NOTIFICATION IS PRESENT

    function notification_check() {
        $this = $('#activity > .badge');

        if (parseInt($this.text()) > 0) {
            $this.addClass("bg-color-red bounceIn animated")
        }
    }

    notification_check();

    // RESET WIDGETS
    $('#refresh').click(function(e) {

        var $this = $(this);

        $.widresetMSG = $this.data('reset-msg');

        $.SmartMessageBox({
            title : "<i class='fa fa-refresh' style='color:green'></i> 重置配置",
            content : $.widresetMSG || "您确认重置本地存储及所有窗口小组件的相关配置信息吗？",
            buttons : "[否][是]"
        }, function(ButtonPressed) {
            if (ButtonPressed == "是" && localStorage) {
                localStorage.clear();
                location.reload();
            }

        });
        e.preventDefault();
    });

    // LOGOUT BUTTON
    $('#logout a').click(function(e) {
        //get the link
        var $this = $(this);
        $.loginURL = $this.attr('href');
        $.logoutMSG = $this.data('logout-msg');

        // ask verification
        $.SmartMessageBox({
            title : "<i class='fa fa-sign-out txt-color-orangeDark'></i> 确定要注销 <span class='txt-color-orangeDark'><strong>" + $('#show-shortcut').text() + "</strong></span> ?",
            content : $.logoutMSG || "You can improve your security further after logging out by closing this opened browser",
            buttons : '[否][是]'

        }, function(ButtonPressed) {
            if (ButtonPressed == "是") {
                $.root_.addClass('animated fadeOutUp');
                setTimeout(logout, 1000)
            }

        });
        e.preventDefault();
    });

    /*
     * LOGOUT ACTION
     */

    function logout() {
        window.location = $.loginURL;
    }

    /*
     * SHORTCUTS
     */

    // SHORT CUT (buttons that appear when clicked on user name)
    $.shortcut_dropdown.find('a').click(function(e) {

        e.preventDefault();

        window.location = $(this).attr('href');
        setTimeout(shortcut_buttons_hide, 300);

    });

    // SHORTCUT buttons goes away if mouse is clicked outside of the area
    $(document).mouseup(function(e) {
        if (!$.shortcut_dropdown.is(e.target)// if the target of the click isn't the container...
            && $.shortcut_dropdown.has(e.target).length === 0) {
            shortcut_buttons_hide()
        }
    });

    // SHORTCUT ANIMATE HIDE
    function shortcut_buttons_hide() {
        $.shortcut_dropdown.animate({
            height : "hide"
        }, 300, "easeOutCirc");
        $.root_.removeClass('shortcut-on');

    }

    // SHORTCUT ANIMATE SHOW
    function shortcut_buttons_show() {
        $.shortcut_dropdown.animate({
            height : "show"
        }, 200, "easeOutCirc")
        $.root_.addClass('shortcut-on');
    }

});

/*
 * RESIZER WITH THROTTLE
 * Source: http://benalman.com/code/projects/jquery-resize/examples/resize/
 */

(function($, window, undefined) {

    var elems = $([]), jq_resize = $.resize = $.extend($.resize, {}), timeout_id, str_setTimeout = 'setTimeout', str_resize = 'resize', str_data = str_resize + '-special-event', str_delay = 'delay', str_throttle = 'throttleWindow';

    jq_resize[str_delay] = $.throttle_delay;

    jq_resize[str_throttle] = true;

    $.event.special[str_resize] = {

        setup : function() {
            if (!jq_resize[str_throttle] && this[str_setTimeout]) {
                return false;
            }

            var elem = $(this);
            elems = elems.add(elem);
            $.data(this, str_data, {
                w : elem.width(),
                h : elem.height()
            });
            if (elems.length === 1) {
                loopy();
            }
        },
        teardown : function() {
            if (!jq_resize[str_throttle] && this[str_setTimeout]) {
                return false;
            }

            var elem = $(this);
            elems = elems.not(elem);
            elem.removeData(str_data);
            if (!elems.length) {
                clearTimeout(timeout_id);
            }
        },

        add : function(handleObj) {
            if (!jq_resize[str_throttle] && this[str_setTimeout]) {
                return false;
            }
            var old_handler;

            function new_handler(e, w, h) {
                var elem = $(this), data = $.data(this, str_data);
                data.w = w !== undefined ? w : elem.width();
                data.h = h !== undefined ? h : elem.height();

                old_handler.apply(this, arguments);
            };
            if ($.isFunction(handleObj)) {
                old_handler = handleObj;
                return new_handler;
            } else {
                old_handler = handleObj.handler;
                handleObj.handler = new_handler;
            }
        }
    };

    function loopy() {
        timeout_id = window[str_setTimeout](function() {
            elems.each(function() {
                var elem = $(this), width = elem.width(), height = elem.height(), data = $.data(this, str_data);
                if (width !== data.w || height !== data.h) {
                    elem.trigger(str_resize, [data.w = width, data.h = height]);
                }

            });
            loopy();

        }, jq_resize[str_delay]);

    };

})(jQuery, this);

/*
 * NAV OR #LEFT-BAR RESIZE DETECT
 * Description: changes the page min-width of #CONTENT and NAV when navigation is resized.
 * This is to counter bugs for min page width on many desktop and mobile devices.
 * Note: This script uses JSthrottle technique so don't worry about memory/CPU usage
 */

// Fix page and nav height
function nav_page_height() {
    var setHeight = $('#main').height();
    //menuHeight = $.left_panel.height();

    var windowHeight = $(window).height() - $.navbar_height;
    //set height

    if (setHeight > windowHeight) {// if content height exceedes actual window height and menuHeight
        //$.left_panel.css('min-height', setHeight+90 + 'px');
        $.root_.css('min-height', setHeight + $.navbar_height + 'px');

    } else {
        //$.left_panel.css('min-height', windowHeight + 'px');
        $.root_.css('min-height', windowHeight + 'px');
    }
}

$('#main').resize(function() {
    nav_page_height();
    check_if_mobile_width();
})

$('nav').resize(function() {
    nav_page_height();
})

function check_if_mobile_width() {
    if ($(window).width() < 979) {
        $.root_.addClass('mobile-view-activated')
    } else if ($.root_.hasClass('mobile-view-activated')) {
        $.root_.removeClass('mobile-view-activated');
    }
}

function runAllForms() {
    $.fn.slider && $(".slider").slider(),
    $.fn.select2 && $(".select2").each(function() {
        var a = $(this),
        b = a.attr("data-select-width") || "100%";
        a.select2({
            allowClear: !0,
            width: b
        })
    }),
    $.fn.mask && $("[data-mask]").each(function() {
        var a = $(this),
        b = a.attr("data-mask") || "error...",
        c = a.attr("data-mask-placeholder") || "X";
        a.mask(b, {
            placeholder: c
        })
    }),
    $.fn.autocomplete && $("[data-autocomplete]").each(function() {
        var a = $(this),
        b = a.data("autocomplete") || ["The", "Quick", "Brown", "Fox", "Jumps", "Over", "Three", "Lazy", "Dogs"];
        a.autocomplete({
            source: b
        })
    }),
    $.fn.datepicker && $(".datepicker").each(function() {
        var a = $(this),
        b = a.attr("data-dateformat") || "dd.mm.yy";
        a.datepicker({
            dateFormat: b,
            prevText: '<i class="fa fa-chevron-left"></i>',
            nextText: '<i class="fa fa-chevron-right"></i>'
        })
    }),
    $("button[data-loading-text]").on("click",
    function() {
        var a = $(this);
        a.button("loading"),
        setTimeout(function() {
            a.button("reset")
        },
        3e3)
    })
}
function runAllCharts() {
    if ($.fn.sparkline) {
        var a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z, A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, W, X, Y, Z, _, ab, bb, cb, db, eb, fb, gb, hb, ib, jb, kb, lb, mb, nb, ob, pb, qb, rb, sb;
        $(".sparkline").each(function() {
            var tb = $(this),
            ub = tb.data("sparkline-type") || "bar";
            if ("bar" == ub && (a = tb.data("sparkline-bar-color") || tb.css("color") || "#0000f0", b = tb.data("sparkline-height") || "26px", c = tb.data("sparkline-barwidth") || 5, d = tb.data("sparkline-barspacing") || 2, e = tb.data("sparkline-negbar-color") || "#A90329", f = tb.data("sparkline-barstacked-color") || ["#A90329", "#0099c6", "#98AA56", "#da532c", "#4490B1", "#6E9461", "#990099", "#B4CAD3"], tb.sparkline("html", {
                barColor: a,
                type: ub,
                height: b,
                barWidth: c,
                barSpacing: d,
                stackedBarColor: f,
                negBarColor: e,
                zeroAxis: "false"
            })), "line" == ub && (b = tb.data("sparkline-height") || "20px", ab = tb.data("sparkline-width") || "90px", g = tb.data("sparkline-line-color") || tb.css("color") || "#0000f0", h = tb.data("sparkline-line-width") || 1, i = tb.data("fill-color") || "#c0d0f0", j = tb.data("sparkline-spot-color") || "#f08000", k = tb.data("sparkline-minspot-color") || "#ed1c24", l = tb.data("sparkline-maxspot-color") || "#f08000", m = tb.data("sparkline-highlightspot-color") || "#50f050", n = tb.data("sparkline-highlightline-color") || "f02020", o = tb.data("sparkline-spotradius") || 1.5, thisChartMinYRange = tb.data("sparkline-min-y") || "undefined", thisChartMaxYRange = tb.data("sparkline-max-y") || "undefined", thisChartMinXRange = tb.data("sparkline-min-x") || "undefined", thisChartMaxXRange = tb.data("sparkline-max-x") || "undefined", thisMinNormValue = tb.data("min-val") || "undefined", thisMaxNormValue = tb.data("max-val") || "undefined", thisNormColor = tb.data("norm-color") || "#c0c0c0", thisDrawNormalOnTop = tb.data("draw-normal") || !1, tb.sparkline("html", {
                type: "line",
                width: ab,
                height: b,
                lineWidth: h,
                lineColor: g,
                fillColor: i,
                spotColor: j,
                minSpotColor: k,
                maxSpotColor: l,
                highlightSpotColor: m,
                highlightLineColor: n,
                spotRadius: o,
                chartRangeMin: thisChartMinYRange,
                chartRangeMax: thisChartMaxYRange,
                chartRangeMinX: thisChartMinXRange,
                chartRangeMaxX: thisChartMaxXRange,
                normalRangeMin: thisMinNormValue,
                normalRangeMax: thisMaxNormValue,
                normalRangeColor: thisNormColor,
                drawNormalOnTop: thisDrawNormalOnTop
            })), "pie" == ub && (p = tb.data("sparkline-piecolor") || ["#B4CAD3", "#4490B1", "#98AA56", "#da532c", "#6E9461", "#0099c6", "#990099", "#717D8A"], q = tb.data("sparkline-piesize") || 90, r = tb.data("border-color") || "#45494C", s = tb.data("sparkline-offset") || 0, tb.sparkline("html", {
                type: "pie",
                width: q,
                height: q,
                tooltipFormat: '<span style="color: {{color}}">&#9679;</span> ({{percent.1}}%)',
                sliceColors: p,
                borderWidth: 1,
                offset: s,
                borderColor: r
            })), "box" == ub && (t = tb.data("sparkline-width") || "auto", u = tb.data("sparkline-height") || "auto", v = tb.data("sparkline-boxraw") || !1, w = tb.data("sparkline-targetval") || "undefined", x = tb.data("sparkline-min") || "undefined", y = tb.data("sparkline-max") || "undefined", z = tb.data("sparkline-showoutlier") || !0, A = tb.data("sparkline-outlier-iqr") || 1.5, B = tb.data("sparkline-spotradius") || 1.5, C = tb.css("color") || "#000000", D = tb.data("fill-color") || "#c0d0f0", E = tb.data("sparkline-whis-color") || "#000000", F = tb.data("sparkline-outline-color") || "#303030", G = tb.data("sparkline-outlinefill-color") || "#f0f0f0", H = tb.data("sparkline-outlinemedian-color") || "#f00000", I = tb.data("sparkline-outlinetarget-color") || "#40a020", tb.sparkline("html", {
                type: "box",
                width: t,
                height: u,
                raw: v,
                target: w,
                minValue: x,
                maxValue: y,
                showOutliers: z,
                outlierIQR: A,
                spotRadius: B,
                boxLineColor: C,
                boxFillColor: D,
                whiskerColor: E,
                outlierLineColor: F,
                outlierFillColor: G,
                medianColor: H,
                targetColor: I
            })), "bullet" == ub) {
                var vb = tb.data("sparkline-height") || "auto";
                J = tb.data("sparkline-width") || 2,
                K = tb.data("sparkline-bullet-color") || "#ed1c24",
                L = tb.data("sparkline-performance-color") || "#3030f0",
                M = tb.data("sparkline-bulletrange-color") || ["#d3dafe", "#a8b6ff", "#7f94ff"],
                tb.sparkline("html", {
                    type: "bullet",
                    height: vb,
                    targetWidth: J,
                    targetColor: K,
                    performanceColor: L,
                    rangeColors: M
                })
            }
            "discrete" == ub && (N = tb.data("sparkline-height") || 26, O = tb.data("sparkline-width") || 50, P = tb.css("color"), Q = tb.data("sparkline-line-height") || 5, R = tb.data("sparkline-threshold") || "undefined", S = tb.data("sparkline-threshold-color") || "#ed1c24", tb.sparkline("html", {
                type: "discrete",
                width: O,
                height: N,
                lineColor: P,
                lineHeight: Q,
                thresholdValue: R,
                thresholdColor: S
            })),
            "tristate" == ub && (T = tb.data("sparkline-height") || 26, U = tb.data("sparkline-posbar-color") || "#60f060", V = tb.data("sparkline-negbar-color") || "#f04040", W = tb.data("sparkline-zerobar-color") || "#909090", X = tb.data("sparkline-barwidth") || 5, Y = tb.data("sparkline-barspacing") || 2, Z = tb.data("sparkline-zeroaxis") || !1, tb.sparkline("html", {
                type: "tristate",
                height: T,
                posBarColor: _,
                negBarColor: V,
                zeroBarColor: W,
                barWidth: X,
                barSpacing: Y,
                zeroAxis: Z
            })),
            "compositebar" == ub && (b = tb.data("sparkline-height") || "20px", ab = tb.data("sparkline-width") || "100%", c = tb.data("sparkline-barwidth") || 3, h = tb.data("sparkline-line-width") || 1, g = tb.data("sparkline-color-top") || "#ed1c24", _ = tb.data("sparkline-color-bottom") || "#333333", tb.sparkline(tb.data("sparkline-bar-val"), {
                type: "bar",
                width: ab,
                height: b,
                barColor: _,
                barWidth: c
            }), tb.sparkline(tb.data("sparkline-line-val"), {
                width: ab,
                height: b,
                lineColor: g,
                lineWidth: h,
                composite: !0,
                fillColor: !1
            })),
            "compositeline" == ub && (b = tb.data("sparkline-height") || "20px", ab = tb.data("sparkline-width") || "90px", bb = tb.data("sparkline-bar-val"), cb = tb.data("sparkline-bar-val-spots-top") || null, db = tb.data("sparkline-bar-val-spots-bottom") || null, eb = tb.data("sparkline-line-width-top") || 1, fb = tb.data("sparkline-line-width-bottom") || 1, gb = tb.data("sparkline-color-top") || "#333333", hb = tb.data("sparkline-color-bottom") || "#ed1c24", ib = tb.data("sparkline-spotradius-top") || 1.5, jb = tb.data("sparkline-spotradius-bottom") || ib, j = tb.data("sparkline-spot-color") || "#f08000", kb = tb.data("sparkline-minspot-color-top") || "#ed1c24", lb = tb.data("sparkline-maxspot-color-top") || "#f08000", mb = tb.data("sparkline-minspot-color-bottom") || kb, nb = tb.data("sparkline-maxspot-color-bottom") || lb, ob = tb.data("sparkline-highlightspot-color-top") || "#50f050", pb = tb.data("sparkline-highlightline-color-top") || "#f02020", qb = tb.data("sparkline-highlightspot-color-bottom") || ob, thisHighlightLineColor2 = tb.data("sparkline-highlightline-color-bottom") || pb, rb = tb.data("sparkline-fillcolor-top") || "transparent", sb = tb.data("sparkline-fillcolor-bottom") || "transparent", tb.sparkline(bb, {
                type: "line",
                spotRadius: ib,
                spotColor: j,
                minSpotColor: kb,
                maxSpotColor: lb,
                highlightSpotColor: ob,
                highlightLineColor: pb,
                valueSpots: cb,
                lineWidth: eb,
                width: ab,
                height: b,
                lineColor: gb,
                fillColor: rb
            }), tb.sparkline(tb.data("sparkline-line-val"), {
                type: "line",
                spotRadius: jb,
                spotColor: j,
                minSpotColor: mb,
                maxSpotColor: nb,
                highlightSpotColor: qb,
                highlightLineColor: thisHighlightLineColor2,
                valueSpots: db,
                lineWidth: fb,
                width: ab,
                height: b,
                lineColor: hb,
                composite: !0,
                fillColor: sb
            }))
        })
    }
    $.fn.easyPieChart && $(".easy-pie-chart").each(function() {
        var a = $(this),
        b = a.css("color") || a.data("pie-color"),
        c = a.data("pie-track-color") || "#eeeeee",
        d = parseInt(a.data("pie-size")) || 25;
        a.easyPieChart({
            barColor: b,
            trackColor: c,
            scaleColor: !1,
            lineCap: "butt",
            lineWidth: parseInt(d / 8.5),
            animate: 1500,
            rotate: -90,
            size: d,
            onStep: function(a) {
                this.$el.find("span").text(~~a)
            }
        })
    })
}
function setup_widgets_desktop() {
    $.fn.jarvisWidgets && $.enableJarvisWidgets && $("#widget-grid").jarvisWidgets({
        grid: "article",
        widgets: ".jarviswidget",
        localStorage: !0,
        deleteSettingsKey: "#deletesettingskey-options",
        settingsKeyLabel: "Reset settings?",
        deletePositionKey: "#deletepositionkey-options",
        positionKeyLabel: "Reset position?",
        sortable: !0,
        buttonsHidden: !1,
        toggleButton: !0,
        toggleClass: "fa fa-minus | fa fa-plus",
        toggleSpeed: 200,
        onToggle: function() {},
        deleteButton: !0,
        deleteClass: "fa fa-times",
        deleteSpeed: 200,
        onDelete: function() {},
        editButton: !0,
        editPlaceholder: ".jarviswidget-editbox",
        editClass: "fa fa-cog | fa fa-save",
        editSpeed: 200,
        onEdit: function() {},
        colorButton: !0,
        fullscreenButton: !0,
        fullscreenClass: "fa fa-expand | fa fa-compress",
        fullscreenDiff: 3,
        onFullscreen: function() {},
        customButton: !1,
        customClass: "folder-10 | next-10",
        customStart: function() {
            alert("Hello you, this is a custom button...")
        },
        customEnd: function() {
            alert("bye, till next time...")
        },
        buttonOrder: "%refresh% %custom% %edit% %toggle% %fullscreen% %delete%",
        opacity: 1,
        dragHandle: "> header",
        placeholderClass: "jarviswidget-placeholder",
        indicator: !0,
        indicatorTime: 600,
        ajax: !0,
        timestampPlaceholder: ".jarviswidget-timestamp",
        timestampFormat: "Last update: %m%/%d%/%y% %h%:%i%:%s%",
        refreshButton: !0,
        refreshButtonClass: "fa fa-refresh",
        labelError: "Sorry but there was a error:",
        labelUpdated: "Last Update:",
        labelRefresh: "Refresh",
        labelDelete: "Delete widget:",
        afterLoad: function() {},
        rtl: !1,
        onChange: function() {},
        onSave: function() {},
        ajaxnav: $.navAsAjax
    })
}
function setup_widgets_mobile() {
    $.enableMobileWidgets && $.enableJarvisWidgets && setup_widgets_desktop()
}
function loadScript(a, b) {
    if (jsArray[a]) b && b();
    else {
        jsArray[a] = !0;
        var c = document.getElementsByTagName("body")[0],
        d = document.createElement("script");
        d.type = "text/javascript",
        d.src = a,
        d.onload = b,
        c.appendChild(d)
    }
}
function checkURL() {
    $(".modal-backdrop")[0] && $.navAsAjax && $(".modal-backdrop").remove();
    var a = location.hash.replace(/^#/, "");
    if (!a) try {
        var b = window.document.URL;
        b && b.indexOf("#", 0) > 0 && b.indexOf("#", 0) < b.length + 1 && (a = b.substring(b.indexOf("#", 0) + 1))
    } catch(c) {}
    if (container = $("#content"), a) {
        $("nav li.active").removeClass("active"),
        $('nav li:has(a[href="' + a + '"])').addClass("active");
        var d = $('nav a[href="' + a + '"]').attr("title");
        document.title = d || document.title,
        loadURL(a + location.search, container)
    } else {
        var e = $('nav > ul > li:first-child > a[href!="#"]');
        window.location.hash = e.attr("href")
    }
}
function loadURL(a, b) {
    $.ajax({
        type: "GET",
        url: a,
        dataType: "html",
        cache: !0,
        beforeSend: function() {
            if ($.navAsAjax && $(".google_maps")[0] && b[0] == $("#content")[0]) {
                var a = $(".google_maps"),
                c = 0;
                a.each(function() {
                    c++;
                    var b = document.getElementById(this.id);
                    c == a.length + 1 || b && b.parentNode.removeChild(b)
                })
            }
            if ($.navAsAjax && $(".dataTables_wrapper")[0] && b[0] == $("#content")[0]) {
                var d = $.fn.dataTable.fnTables(!0);
                $(d).each(function() {
                    $(this).dataTable().fnDestroy()
                })
            }
            if ($.navAsAjax && $.intervalArr.length > 0 && b[0] == $("#content")[0]) for (; $.intervalArr.length > 0;) clearInterval($.intervalArr.pop());
            b.html('<h1 class="ajax-loading-animation"><i class="fa fa-cog fa-spin"></i> 加载...</h1>'),
            b[0] == $("#content")[0] && (drawBreadCrumb(), $("html").animate({
                scrollTop: 0
            },
            "fast"))
        },
        success: function(a) {
            b.css({
                opacity: "0.0"
            }).html(a).delay(50).animate({
                opacity: "1.0"
            },
            300)
        },
        error: function() {
            b.html('<h4 class="ajax-loading-error"><i class="fa fa-warning txt-color-orangeDark"></i> Error 404! Page not found.</h4>')
        },
        async: !0
		//async: true
    })
}
function drawBreadCrumb() {
    var a = $("nav li.active > a"),
    b = a.length;
    $.bread_crumb.empty(),
    $.bread_crumb.append($("<li>首页</li>")),
    a.each(function() {
        $.bread_crumb.append($("<li></li>").html($.trim($(this).clone().children(".badge").remove().end().text()))),
        --b || (document.title = $.bread_crumb.find("li:last-child").text())
    })
}
function pageSetUp() {
    "desktop" === $.device ? ($("[rel=tooltip]").tooltip(), $("[rel=popover]").popover(), $("[rel=popover-hover]").popover({
        trigger: "hover"
    }), setup_widgets_desktop(), runAllCharts(), runAllForms()) : ($("[rel=popover]").popover(), $("[rel=popover-hover]").popover({
        trigger: "hover"
    }), runAllCharts(), setup_widgets_mobile(), runAllForms())
}
$.throttle_delay = 350,
$.menu_speed = 235,
$.navAsAjax = !0,
$.enableJarvisWidgets = !0,
$.enableMobileWidgets = !1,
$.fastClick = !1,
$.calc_navbar_height = function() {
    var a = null;
    return $("#header").length && (a = $("#header").height()),
    null === a && (a = $('<div id="header"></div>').height()),
    null === a ? 49 : a
},
$.navbar_height = $.calc_navbar_height(),
$.root_ = $("body"),
$.left_panel = $("#left-panel"),
$.shortcut_dropdown = $("#shortcut"),
$.bread_crumb = $("#ribbon ol.breadcrumb"),
$.intervalArr = new Array;
var $topmenu = !1;
$.device = null;
var ismobile = /iphone|ipad|ipod|android|blackberry|mini|windows\sce|palm/i.test(navigator.userAgent.toLowerCase());
ismobile ? ($.root_.addClass("mobile-detected"), $.device = "mobile", $.fastClick && ($.root_.addClass("needsclick"), FastClick.attach(document.body))) : ($.root_.addClass("desktop-detected"), $.device = "desktop"),
($("body").hasClass("menu-on-top") || "top" == localStorage.getItem("sm-setmenu")) && ($topmenu = !0, $("body").addClass("menu-on-top")),
jQuery(document).ready(function() {
    function a() {
        $this = $("#activity > .badge"),
        parseInt($this.text()) > 0 && $this.addClass("bg-color-red bounceIn animated")
    }
    var b = {
        userLogout: function(a) {
            function b() {
                window.location = a.attr("href")
            }
            $.SmartMessageBox({
                title: "<i class='fa fa-sign-out txt-color-orangeDark'></i> 确定要注销 <span class='txt-color-orangeDark'><strong>" + $("#show-shortcut").text() + "</strong></span> ?",
                content: a.data("logout-msg") || "You can improve your security further after logging out by closing this opened browser",
                buttons: "[否][是]"
            },
            function(a) {
                "Yes" == a && ($.root_.addClass("animated fadeOutUp"), setTimeout(b, 1e3))
            })
        },
        resetWidgets: function(a) {
            $.widresetMSG = a.data("reset-msg"),
            $.SmartMessageBox({
                title: "<i class='fa fa-refresh' style='color:green'></i> 重置配置",
                content: $.widresetMSG || "您确认重置本地存储及所有窗口小组件的相关配置信息吗?",
                buttons: "[否][是]"
            },
            function(a) {
                "是" == a && localStorage && (localStorage.clear(), location.reload())
            })
        },
        launchFullscreen: function(a) {
            $.root_.hasClass("full-screen") ? ($.root_.removeClass("full-screen"), document.exitFullscreen ? document.exitFullscreen() : document.mozCancelFullScreen ? document.mozCancelFullScreen() : document.webkitExitFullscreen && document.webkitExitFullscreen()) : ($.root_.addClass("full-screen"), a.requestFullscreen ? a.requestFullscreen() : a.mozRequestFullScreen ? a.mozRequestFullScreen() : a.webkitRequestFullscreen ? a.webkitRequestFullscreen() : a.msRequestFullscreen && a.msRequestFullscreen())
        },
        minifyMenu: function() {
            $.root_.hasClass("menu-on-top") || ($.root_.toggleClass("minified"), $.root_.removeClass("hidden-menu"), $("html").removeClass("hidden-menu-mobile-lock"), $this.effect("highlight", {},
            500))
        },
        toggleMenu: function() {
            $.root_.hasClass("menu-on-top") ? $.root_.hasClass("menu-on-top") && $.root_.hasClass("mobile-view-activated") && ($("html").toggleClass("hidden-menu-mobile-lock"), $.root_.toggleClass("hidden-menu"), $.root_.removeClass("minified")) : ($("html").toggleClass("hidden-menu-mobile-lock"), $.root_.toggleClass("hidden-menu"), $.root_.removeClass("minified"))
        },
        toggleShortcut: function() {
            function a() {
                $.shortcut_dropdown.animate({
                    height: "hide"
                },
                300, "easeOutCirc"),
                $.root_.removeClass("shortcut-on")
            }
            function b() {
                $.shortcut_dropdown.animate({
                    height: "show"
                },
                200, "easeOutCirc"),
                $.root_.addClass("shortcut-on")
            }
            $.shortcut_dropdown.is(":visible") ? a() : b(),
            $.shortcut_dropdown.find("a").click(function(b) {
                b.preventDefault(),
                window.location = $(this).attr("href"),
                setTimeout(a, 300)
            }),
            $(document).mouseup(function(b) {
                $.shortcut_dropdown.is(b.target) || 0 !== $.shortcut_dropdown.has(b.target).length || a()
            })
        }
    };
    $.root_.on("click", '[data-action="userLogout"]',
    function(a) {
        var c = $(this);
        b.userLogout(c),
        a.preventDefault()
    }),
    $.root_.on("click", '[data-action="resetWidgets"]',
    function(a) {
        var c = $(this);
        b.resetWidgets(c),
        a.preventDefault()
    }),
    $.root_.on("click", '[data-action="launchFullscreen"]',
    function(a) {
        b.launchFullscreen(document.documentElement),
        a.preventDefault()
    }),
    $.root_.on("click", '[data-action="minifyMenu"]',
    function(a) {
        var c = $(this);
        b.minifyMenu(c),
        a.preventDefault()
    }),
    $.root_.on("click", '[data-action="toggleMenu"]',
    function(a) {
        b.toggleMenu(),
        a.preventDefault()
    }),
    $.root_.on("click", '[data-action="toggleShortcut"]',
    function(a) {
        b.toggleShortcut(),
        a.preventDefault()
    }),
    $("[rel=tooltip]").length && $("[rel=tooltip]").tooltip(),
    $topmenu || $("nav ul").jarvismenu({
        accordion: !0,
        speed: $.menu_speed,
        closedSign: '<em class="fa fa-plus-square-o"></em>',
        openedSign: '<em class="fa fa-minus-square-o"></em>'
    }),
    $("#search-mobile").click(function() {
        $.root_.addClass("search-mobile")
    }),
    $("#cancel-search-js").click(function() {
        $.root_.removeClass("search-mobile")
    }),
    $('input[name="activity"]').change(function() {
        var a = $(this);
        url = a.attr("id"),
        container = $(".ajax-notifications"),
        loadURL(url, container)
    }),
    $(document).mouseup(function(a) {
        $(".ajax-dropdown").is(a.target) || 0 !== $(".ajax-dropdown").has(a.target).length || ($(".ajax-dropdown").fadeOut(150), $(".ajax-dropdown").prev().removeClass("active"))
    }),
    $("button[data-btn-loading]").on("click",
    function() {
        var a = $(this);
        a.button("loading"),
        setTimeout(function() {
            a.button("reset")
        },
        3e3)
    }),
    a()
}),
function(a, b, c) {
    function d() {
        e = b[h](function() {
            f.each(function() {
                var b, c, d = a(this),
                e = a.data(this, j);
                try {
                    b = d.width()
                } catch(f) {
                    b = d.width
                }
                try {
                    c = d.height()
                } catch(f) {
                    c = d.height
                } (b !== e.w || c !== e.h) && d.trigger(i, [e.w = b, e.h = c])
            }),
            d()
        },
        g[k])
    }
    var e, f = a([]),
    g = a.resize = a.extend(a.resize, {}),
    h = "setTimeout",
    i = "resize",
    j = i + "-special-event",
    k = "delay",
    l = "throttleWindow";
    g[k] = a.throttle_delay,
    g[l] = !0,
    a.event.special[i] = {
        setup: function() {
            if (!g[l] && this[h]) return ! 1;
            var b = a(this);
            f = f.add(b);
            try {
                a.data(this, j, {
                    w: b.width(),
                    h: b.height()
                })
            } catch(c) {
                a.data(this, j, {
                    w: b.width,
                    h: b.height
                })
            }
            1 === f.length && d()
        },
        teardown: function() {
            if (!g[l] && this[h]) return ! 1;
            var b = a(this);
            f = f.not(b),
            b.removeData(j),
            f.length || clearTimeout(e)
        },
        add: function(b) {
            function d(b, d, f) {
                var g = a(this),
                h = a.data(this, j);
                h.w = d !== c ? d: g.width(),
                h.h = f !== c ? f: g.height(),
                e.apply(this, arguments)
            }
            if (!g[l] && this[h]) return ! 1;
            var e;
            return a.isFunction(b) ? (e = b, d) : (e = b.handler, void(b.handler = d))
        }
    }
} (jQuery, this),
$("#main").resize(function() {
    check_if_mobile_width()
});
var ie = function() {
    for (var a, b = 3,
    c = document.createElement("div"), d = c.getElementsByTagName("i"); c.innerHTML = "<!--[if gt IE " + ++b + "]><i></i><![endif]-->", d[0];);
    return b > 4 ? b: a
} ();
if ($.fn.extend({
    jarvismenu: function(a) {
        var b = {
            accordion: "true",
            speed: 200,
            closedSign: "[+]",
            openedSign: "[-]"
        },
        c = $.extend(b, a),
        d = $(this);
        d.find("li").each(function() {
            0 !== $(this).find("ul").size() && ($(this).find("a:first").append("<b class='collapse-sign'>" + c.closedSign + "</b>"), "#" == $(this).find("a:first").attr("href") && $(this).find("a:first").click(function() {
                return ! 1
            }))
        }),
        d.find("li.active").each(function() {
            $(this).parents("ul").slideDown(c.speed),
            $(this).parents("ul").parent("li").find("b:first").html(c.openedSign),
            $(this).parents("ul").parent("li").addClass("open")
        }),
        d.find("li a").click(function() {
            0 !== $(this).parent().find("ul").size() && (c.accordion && ($(this).parent().find("ul").is(":visible") || (parents = $(this).parent().parents("ul"), visible = d.find("ul:visible"), visible.each(function(a) {
                var b = !0;
                parents.each(function(c) {
                    return parents[c] == visible[a] ? (b = !1, !1) : void 0
                }),
                b && $(this).parent().find("ul") != visible[a] && $(visible[a]).slideUp(c.speed,
                function() {
                    $(this).parent("li").find("b:first").html(c.closedSign),
                    $(this).parent("li").removeClass("open")
                })
            }))), $(this).parent().find("ul:first").is(":visible") && !$(this).parent().find("ul:first").hasClass("active") ? $(this).parent().find("ul:first").slideUp(c.speed,
            function() {
                $(this).parent("li").removeClass("open"),
                $(this).parent("li").find("b:first").delay(c.speed).html(c.closedSign)
            }) : $(this).parent().find("ul:first").slideDown(c.speed,
            function() {
                $(this).parent("li").addClass("open"),
                $(this).parent("li").find("b:first").delay(c.speed).html(c.openedSign)
            }))
        })
    }
}), jQuery.fn.doesExist = function() {
    return jQuery(this).length > 0
},
$.navAsAjax || $(".google_maps")) {
    var gMapsLoaded = !1;
    window.gMapsCallback = function() {
        gMapsLoaded = !0,
        $(window).trigger("gMapsLoaded")
    },
    window.loadGoogleMaps = function() {
        if (gMapsLoaded) return window.gMapsCallback();
        var a = document.createElement("script");
        a.setAttribute("type", "text/javascript"),
        a.setAttribute("src", "http://maps.google.com/maps/api/js?sensor=false&callback=gMapsCallback"),
        (document.getElementsByTagName("head")[0] || document.documentElement).appendChild(a)
    }
}
var jsArray = {};
$.navAsAjax && ($("nav").length && checkURL(), $(document).on("click", 'nav a[href!="#"]',
function(a) {
    a.preventDefault();
    var b = $(a.currentTarget);
    b.parent().hasClass("active") || b.attr("target") || ($.root_.hasClass("mobile-view-activated") ? ($.root_.removeClass("hidden-menu"), window.setTimeout(function() {
        window.location.search ? window.location.href = window.location.href.replace(window.location.search, "").replace(window.location.hash, "") + "#" + b.attr("href") : window.location.hash = b.attr("href")
    },
    150)) : window.location.search ? window.location.href = window.location.href.replace(window.location.search, "").replace(window.location.hash, "") + "#" + b.attr("href") : window.location.hash = b.attr("href"))
}), $(document).on("click", 'nav a[target="_blank"]',
function(a) {
    a.preventDefault();
    var b = $(a.currentTarget);
    window.open(b.attr("href"))
}), $(document).on("click", 'nav a[target="_top"]',
function(a) {
    a.preventDefault();
    var b = $(a.currentTarget);
    window.location = b.attr("href")
}), $(document).on("click", 'nav a[href="#"]',
function(a) {
    a.preventDefault()
}), $(window).on("hashchange",
function() {
    checkURL()
})),
$("body").on("click",
function(a) {
    $('[rel="popover"]').each(function() {
        $(this).is(a.target) || 0 !== $(this).has(a.target).length || 0 !== $(".popover").has(a.target).length || $(this).popover("hide")
    })
});


/* ~ END: CUSTOM MENU PLUGIN */

/*
 * ELEMENT EXIST OR NOT
 * Description: returns true or false
 * Usage: $('#myDiv').doesExist();
 */

jQuery.fn.doesExist = function() {
    return jQuery(this).length > 0;
};

/* ~ END: ELEMENT EXIST OR NOT */

/*
 * FULL SCREEN FUNCTION
 */

// Find the right method, call on correct element
function launchFullscreen(element) {

    if (!$.root_.hasClass("full-screen")) {

        $.root_.addClass("full-screen");

        if (element.requestFullscreen) {
            element.requestFullscreen();
        } else if (element.mozRequestFullScreen) {
            element.mozRequestFullScreen();
        } else if (element.webkitRequestFullscreen) {
            element.webkitRequestFullscreen();
        } else if (element.msRequestFullscreen) {
            element.msRequestFullscreen();
        }

    } else {

        $.root_.removeClass("full-screen");

        if (document.exitFullscreen) {
            document.exitFullscreen();
        } else if (document.mozCancelFullScreen) {
            document.mozCancelFullScreen();
        } else if (document.webkitExitFullscreen) {
            document.webkitExitFullscreen();
        }

    }

}
/*! SmartAdmin - v1.4.0 - 2014-06-04 */
!
function(a) {
    a.extend(a.fn, {
        validate: function(b) {
            if (!this.length) return void(b && b.debug && window.console && console.warn("Nothing selected, can't validate, returning nothing."));
            var c = a.data(this[0], "validator");
            return c ? c: (this.attr("novalidate", "novalidate"), c = new a.validator(b, this[0]), a.data(this[0], "validator", c), c.settings.onsubmit && (this.validateDelegate(":submit", "click",
            function(b) {
                c.settings.submitHandler && (c.submitButton = b.target),
                a(b.target).hasClass("cancel") && (c.cancelSubmit = !0)
            }), this.submit(function(b) {
                function d() {
                    var d;
                    return c.settings.submitHandler ? (c.submitButton && (d = a("<input type='hidden'/>").attr("name", c.submitButton.name).val(c.submitButton.value).appendTo(c.currentForm)), c.settings.submitHandler.call(c, c.currentForm, b), c.submitButton && d.remove(), !1) : !0
                }
                return c.settings.debug && b.preventDefault(),
                c.cancelSubmit ? (c.cancelSubmit = !1, d()) : c.form() ? c.pendingRequest ? (c.formSubmitted = !0, !1) : d() : (c.focusInvalid(), !1)
            })), c)
        },
        valid: function() {
            if (a(this[0]).is("form")) return this.validate().form();
            var b = !0,
            c = a(this[0].form).validate();
            return this.each(function() {
                b &= c.element(this)
            }),
            b
        },
        removeAttrs: function(b) {
            var c = {},
            d = this;
            return a.each(b.split(/\s/),
            function(a, b) {
                c[b] = d.attr(b),
                d.removeAttr(b)
            }),
            c
        },
        rules: function(b, c) {
            var d = this[0];
            if (b) {
                var e = a.data(d.form, "validator").settings,
                f = e.rules,
                g = a.validator.staticRules(d);
                switch (b) {
                case "add":
                    a.extend(g, a.validator.normalizeRule(c)),
                    f[d.name] = g,
                    c.messages && (e.messages[d.name] = a.extend(e.messages[d.name], c.messages));
                    break;
                case "remove":
                    if (!c) return delete f[d.name],
                    g;
                    var h = {};
                    return a.each(c.split(/\s/),
                    function(a, b) {
                        h[b] = g[b],
                        delete g[b]
                    }),
                    h
                }
            }
            var i = a.validator.normalizeRules(a.extend({},
            a.validator.classRules(d), a.validator.attributeRules(d), a.validator.dataRules(d), a.validator.staticRules(d)), d);
            if (i.required) {
                var j = i.required;
                delete i.required,
                i = a.extend({
                    required: j
                },
                i)
            }
            return i
        }
    }),
    a.extend(a.expr[":"], {
        blank: function(b) {
            return ! a.trim("" + b.value)
        },
        filled: function(b) {
            return !! a.trim("" + b.value)
        },
        unchecked: function(a) {
            return ! a.checked
        }
    }),
    a.validator = function(b, c) {
        this.settings = a.extend(!0, {},
        a.validator.defaults, b),
        this.currentForm = c,
        this.init()
    },
    a.validator.format = function(b, c) {
        return 1 === arguments.length ?
        function() {
            var c = a.makeArray(arguments);
            return c.unshift(b),
            a.validator.format.apply(this, c)
        }: (arguments.length > 2 && c.constructor !== Array && (c = a.makeArray(arguments).slice(1)), c.constructor !== Array && (c = [c]), a.each(c,
        function(a, c) {
            b = b.replace(new RegExp("\\{" + a + "\\}", "g"),
            function() {
                return c
            })
        }), b)
    },
    a.extend(a.validator, {
        defaults: {
            messages: {},
            groups: {},
            rules: {},
            errorClass: "invalid",
            validClass: "valid",
            errorElement: "em",
            focusInvalid: !0,
            errorContainer: a([]),
            errorLabelContainer: a([]),
            onsubmit: !0,
            ignore: ":hidden",
            ignoreTitle: !1,
            onfocusin: function(a) {
                this.lastActive = a,
                this.settings.focusCleanup && !this.blockFocusCleanup && (this.settings.unhighlight && this.settings.unhighlight.call(this, a, this.settings.errorClass, this.settings.validClass), this.addWrapper(this.errorsFor(a)).hide())
            },
            onfocusout: function(a) {
                this.checkable(a) || !(a.name in this.submitted) && this.optional(a) || this.element(a)
            },
            onkeyup: function(a, b) { (9 !== b.which || "" !== this.elementValue(a)) && (a.name in this.submitted || a === this.lastElement) && this.element(a)
            },
            onclick: function(a) {
                a.name in this.submitted ? this.element(a) : a.parentNode.name in this.submitted && this.element(a.parentNode)
            },
            highlight: function(b, c, d) {
                "radio" === b.type ? this.findByName(b.name).addClass(c).removeClass(d).parent().addClass("state-error").removeClass("state-success") : a(b).addClass(c).removeClass(d).parent().addClass("state-error").removeClass("state-success")
            },
            unhighlight: function(b, c, d) {
                "radio" === b.type ? this.findByName(b.name).removeClass(c).addClass(d).parent().addClass("state-success").removeClass("state-error") : a(b).removeClass(c).addClass(d).parent().addClass("state-success").removeClass("state-error")
            }
        },
        setDefaults: function(b) {
            a.extend(a.validator.defaults, b)
        },
        messages: {
            required: "这个字段是必需的",
            remote: "请修复这个领域",
            email: "请输入一个有效的电子邮件地址",
            url: "请输入一个有效的URL",
            date: "请输入一个有效的日期",
            dateISO: "请输入一个有效的日期 (ISO)",
            number: "请输入一个有效的号码",
            digits: "请只输入数字",
            creditcard: "请输入一个有效的信用卡号码",
            equalTo: "请再次输入相同的值",
            maxlength: a.validator.format("请输入不超过{ 0 }字符"),
            minlength: a.validator.format("请输入至少{ 0 }字符"),
            rangelength: a.validator.format("请输入一个值{ 0 }和{ 1 }字符之间"),
            range: a.validator.format("请输入一个值{ 0 } - { 1 }"),
            max: a.validator.format("请输入一个值小于或等于{ 0 }"),
            min: a.validator.format("请输入一个值大于或等于{ 0 }")
        },
        autoCreateRanges: !1,
        prototype: {
            init: function() {
                function b(b) {
                    var c = a.data(this[0].form, "validator"),
                    d = "on" + b.type.replace(/^validate/, "");
                    c.settings[d] && c.settings[d].call(c, this[0], b)
                }
                this.labelContainer = a(this.settings.errorLabelContainer),
                this.errorContext = this.labelContainer.length && this.labelContainer || a(this.currentForm),
                this.containers = a(this.settings.errorContainer).add(this.settings.errorLabelContainer),
                this.submitted = {},
                this.valueCache = {},
                this.pendingRequest = 0,
                this.pending = {},
                this.invalid = {},
                this.reset();
                var c = this.groups = {};
                a.each(this.settings.groups,
                function(b, d) {
                    "string" == typeof d && (d = d.split(/\s/)),
                    a.each(d,
                    function(a, d) {
                        c[d] = b
                    })
                });
                var d = this.settings.rules;
                a.each(d,
                function(b, c) {
                    d[b] = a.validator.normalizeRule(c)
                }),
                a(this.currentForm).validateDelegate(":text, [type='password'], [type='file'], select, textarea, [type='number'], [type='search'] ,[type='tel'], [type='url'], [type='email'], [type='datetime'], [type='date'], [type='month'], [type='week'], [type='time'], [type='datetime-local'], [type='range'], [type='color'] ", "focusin focusout keyup", b).validateDelegate("[type='radio'], [type='checkbox'], select, option", "click", b),
                this.settings.invalidHandler && a(this.currentForm).bind("invalid-form.validate", this.settings.invalidHandler)
            },
            form: function() {
                return this.checkForm(),
                a.extend(this.submitted, this.errorMap),
                this.invalid = a.extend({},
                this.errorMap),
                this.valid() || a(this.currentForm).triggerHandler("invalid-form", [this]),
                this.showErrors(),
                this.valid()
            },
            checkForm: function() {
                this.prepareForm();
                for (var a = 0,
                b = this.currentElements = this.elements(); b[a]; a++) this.check(b[a]);
                return this.valid()
            },
            element: function(b) {
                b = this.validationTargetFor(this.clean(b)),
                this.lastElement = b,
                this.prepareElement(b),
                this.currentElements = a(b);
                var c = this.check(b) !== !1;
                return c ? delete this.invalid[b.name] : this.invalid[b.name] = !0,
                this.numberOfInvalids() || (this.toHide = this.toHide.add(this.containers)),
                this.showErrors(),
                c
            },
            showErrors: function(b) {
                if (b) {
                    a.extend(this.errorMap, b),
                    this.errorList = [];
                    for (var c in b) this.errorList.push({
                        message: b[c],
                        element: this.findByName(c)[0]
                    });
                    this.successList = a.grep(this.successList,
                    function(a) {
                        return ! (a.name in b)
                    })
                }
                this.settings.showErrors ? this.settings.showErrors.call(this, this.errorMap, this.errorList) : this.defaultShowErrors()
            },
            resetForm: function() {
                a.fn.resetForm && a(this.currentForm).resetForm(),
                this.submitted = {},
                this.lastElement = null,
                this.prepareForm(),
                this.hideErrors(),
                this.elements().removeClass(this.settings.errorClass).removeData("previousValue")
            },
            numberOfInvalids: function() {
                return this.objectLength(this.invalid)
            },
            objectLength: function(a) {
                var b = 0;
                for (var c in a) b++;
                return b
            },
            hideErrors: function() {
                this.addWrapper(this.toHide).hide()
            },
            valid: function() {
                return 0 === this.size()
            },
            size: function() {
                return this.errorList.length
            },
            focusInvalid: function() {
                if (this.settings.focusInvalid) try {
                    a(this.findLastActive() || this.errorList.length && this.errorList[0].element || []).filter(":visible").focus().trigger("focusin")
                } catch(b) {}
            },
            findLastActive: function() {
                var b = this.lastActive;
                return b && 1 === a.grep(this.errorList,
                function(a) {
                    return a.element.name === b.name
                }).length && b
            },
            elements: function() {
                var b = this,
                c = {};
                return a(this.currentForm).find("input, select, textarea").not(":submit, :reset, :image, [disabled]").not(this.settings.ignore).filter(function() {
                    return ! this.name && b.settings.debug && window.console && console.error("%o has no name assigned", this),
                    this.name in c || !b.objectLength(a(this).rules()) ? !1 : (c[this.name] = !0, !0)
                })
            },
            clean: function(b) {
                return a(b)[0]
            },
            errors: function() {
                var b = this.settings.errorClass.replace(" ", ".");
                return a(this.settings.errorElement + "." + b, this.errorContext)
            },
            reset: function() {
                this.successList = [],
                this.errorList = [],
                this.errorMap = {},
                this.toShow = a([]),
                this.toHide = a([]),
                this.currentElements = a([])
            },
            prepareForm: function() {
                this.reset(),
                this.toHide = this.errors().add(this.containers)
            },
            prepareElement: function(a) {
                this.reset(),
                this.toHide = this.errorsFor(a)
            },
            elementValue: function(b) {
                var c = a(b).attr("type"),
                d = a(b).val();
                return "radio" === c || "checkbox" === c ? a("input[name='" + a(b).attr("name") + "']:checked").val() : "string" == typeof d ? d.replace(/\r/g, "") : d
            },
            check: function(b) {
                b = this.validationTargetFor(this.clean(b));
                var c, d = a(b).rules(),
                e = !1,
                f = this.elementValue(b);
                for (var g in d) {
                    var h = {
                        method: g,
                        parameters: d[g]
                    };
                    try {
                        if (c = a.validator.methods[g].call(this, f, b, h.parameters), "dependency-mismatch" === c) {
                            e = !0;
                            continue
                        }
                        if (e = !1, "pending" === c) return void(this.toHide = this.toHide.not(this.errorsFor(b)));
                        if (!c) return this.formatAndAdd(b, h),
                        !1
                    } catch(i) {
                        throw this.settings.debug && window.console && console.log("Exception occured when checking element " + b.id + ", check the '" + h.method + "' method.", i),
                        i
                    }
                }
                return e ? void 0 : (this.objectLength(d) && this.successList.push(b), !0)
            },
            customDataMessage: function(b, c) {
                return a(b).data("msg-" + c.toLowerCase()) || b.attributes && a(b).attr("data-msg-" + c.toLowerCase())
            },
            customMessage: function(a, b) {
                var c = this.settings.messages[a];
                return c && (c.constructor === String ? c: c[b])
            },
            findDefined: function() {
                for (var a = 0; a < arguments.length; a++) if (void 0 !== arguments[a]) return arguments[a];
                return void 0
            },
            defaultMessage: function(b, c) {
                return this.findDefined(this.customMessage(b.name, c), this.customDataMessage(b, c), !this.settings.ignoreTitle && b.title || void 0, a.validator.messages[c], "<strong>Warning: No message defined for " + b.name + "</strong>")
            },
            formatAndAdd: function(b, c) {
                var d = this.defaultMessage(b, c.method),
                e = /\$?\{(\d+)\}/g;
                "function" == typeof d ? d = d.call(this, c.parameters, b) : e.test(d) && (d = a.validator.format(d.replace(e, "{$1}"), c.parameters)),
                this.errorList.push({
                    message: d,
                    element: b
                }),
                this.errorMap[b.name] = d,
                this.submitted[b.name] = d
            },
            addWrapper: function(a) {
                return this.settings.wrapper && (a = a.add(a.parent(this.settings.wrapper))),
                a
            },
            defaultShowErrors: function() {
                var a, b;
                for (a = 0; this.errorList[a]; a++) {
                    var c = this.errorList[a];
                    this.settings.highlight && this.settings.highlight.call(this, c.element, this.settings.errorClass, this.settings.validClass),
                    this.showLabel(c.element, c.message)
                }
                if (this.errorList.length && (this.toShow = this.toShow.add(this.containers)), this.settings.success) for (a = 0; this.successList[a]; a++) this.showLabel(this.successList[a]);
                if (this.settings.unhighlight) for (a = 0, b = this.validElements(); b[a]; a++) this.settings.unhighlight.call(this, b[a], this.settings.errorClass, this.settings.validClass);
                this.toHide = this.toHide.not(this.toShow),
                this.hideErrors(),
                this.addWrapper(this.toShow).show()
            },
            validElements: function() {
                return this.currentElements.not(this.invalidElements())
            },
            invalidElements: function() {
                return a(this.errorList).map(function() {
                    return this.element
                })
            },
            showLabel: function(b, c) {
                var d = this.errorsFor(b);
                d.length ? (d.removeClass(this.settings.validClass).addClass(this.settings.errorClass), d.html(c)) : (d = a("<" + this.settings.errorElement + ">").attr("for", this.idOrName(b)).addClass(this.settings.errorClass).html(c || ""), this.settings.wrapper && (d = d.hide().show().wrap("<" + this.settings.wrapper + "/>").parent()), this.labelContainer.append(d).length || (this.settings.errorPlacement ? this.settings.errorPlacement(d, a(b)) : d.insertAfter(b))),
                !c && this.settings.success && (d.text(""), "string" == typeof this.settings.success ? d.addClass(this.settings.success) : this.settings.success(d, b)),
                this.toShow = this.toShow.add(d)
            },
            errorsFor: function(b) {
                var c = this.idOrName(b);
                return this.errors().filter(function() {
                    return a(this).attr("for") === c
                })
            },
            idOrName: function(a) {
                return this.groups[a.name] || (this.checkable(a) ? a.name: a.id || a.name)
            },
            validationTargetFor: function(a) {
                return this.checkable(a) && (a = this.findByName(a.name).not(this.settings.ignore)[0]),
                a
            },
            checkable: function(a) {
                return /radio|checkbox/i.test(a.type)
            },
            findByName: function(b) {
                return a(this.currentForm).find("[name='" + b + "']")
            },
            getLength: function(b, c) {
                switch (c.nodeName.toLowerCase()) {
                case "select":
                    return a("option:selected", c).length;
                case "input":
                    if (this.checkable(c)) return this.findByName(c.name).filter(":checked").length
                }
                return b.length
            },
            depend: function(a, b) {
                return this.dependTypes[typeof a] ? this.dependTypes[typeof a](a, b) : !0
            },
            dependTypes: {
                "boolean": function(a) {
                    return a
                },
                string: function(b, c) {
                    return !! a(b, c.form).length
                },
                "function": function(a, b) {
                    return a(b)
                }
            },
            optional: function(b) {
                var c = this.elementValue(b);
                return ! a.validator.methods.required.call(this, c, b) && "dependency-mismatch"
            },
            startRequest: function(a) {
                this.pending[a.name] || (this.pendingRequest++, this.pending[a.name] = !0)
            },
            stopRequest: function(b, c) {
                this.pendingRequest--,
                this.pendingRequest < 0 && (this.pendingRequest = 0),
                delete this.pending[b.name],
                c && 0 === this.pendingRequest && this.formSubmitted && this.form() ? (a(this.currentForm).submit(), this.formSubmitted = !1) : !c && 0 === this.pendingRequest && this.formSubmitted && (a(this.currentForm).triggerHandler("invalid-form", [this]), this.formSubmitted = !1)
            },
            previousValue: function(b) {
                return a.data(b, "previousValue") || a.data(b, "previousValue", {
                    old: null,
                    valid: !0,
                    message: this.defaultMessage(b, "remote")
                })
            }
        },
        classRuleSettings: {
            required: {
                required: !0
            },
            email: {
                email: !0
            },
            url: {
                url: !0
            },
            date: {
                date: !0
            },
            dateISO: {
                dateISO: !0
            },
            number: {
                number: !0
            },
            digits: {
                digits: !0
            },
            creditcard: {
                creditcard: !0
            }
        },
        addClassRules: function(b, c) {
            b.constructor === String ? this.classRuleSettings[b] = c: a.extend(this.classRuleSettings, b)
        },
        classRules: function(b) {
            var c = {},
            d = a(b).attr("class");
            return d && a.each(d.split(" "),
            function() {
                this in a.validator.classRuleSettings && a.extend(c, a.validator.classRuleSettings[this])
            }),
            c
        },
        attributeRules: function(b) {
            var c = {},
            d = a(b);
            for (var e in a.validator.methods) {
                var f;
                "required" === e ? (f = d.get(0).getAttribute(e), "" === f && (f = !0), f = !!f) : f = d.attr(e),
                f ? c[e] = f: d[0].getAttribute("type") === e && (c[e] = !0)
            }
            return c.maxlength && /-1|2147483647|524288/.test(c.maxlength) && delete c.maxlength,
            c
        },
        dataRules: function(b) {
            var c, d, e = {},
            f = a(b);
            for (c in a.validator.methods) d = f.data("rule-" + c.toLowerCase()),
            void 0 !== d && (e[c] = d);
            return e
        },
        staticRules: function(b) {
            var c = {},
            d = a.data(b.form, "validator");
            return d.settings.rules && (c = a.validator.normalizeRule(d.settings.rules[b.name]) || {}),
            c
        },
        normalizeRules: function(b, c) {
            return a.each(b,
            function(d, e) {
                if (e === !1) return void delete b[d];
                if (e.param || e.depends) {
                    var f = !0;
                    switch (typeof e.depends) {
                    case "string":
                        f = !!a(e.depends, c.form).length;
                        break;
                    case "function":
                        f = e.depends.call(c, c)
                    }
                    f ? b[d] = void 0 !== e.param ? e.param: !0 : delete b[d]
                }
            }),
            a.each(b,
            function(d, e) {
                b[d] = a.isFunction(e) ? e(c) : e
            }),
            a.each(["minlength", "maxlength"],
            function() {
                b[this] && (b[this] = Number(b[this]))
            }),
            a.each(["rangelength"],
            function() {
                var c;
                b[this] && (a.isArray(b[this]) ? b[this] = [Number(b[this][0]), Number(b[this][1])] : "string" == typeof b[this] && (c = b[this].split(/[\s,]+/), b[this] = [Number(c[0]), Number(c[1])]))
            }),
            a.validator.autoCreateRanges && (b.min && b.max && (b.range = [b.min, b.max], delete b.min, delete b.max), b.minlength && b.maxlength && (b.rangelength = [b.minlength, b.maxlength], delete b.minlength, delete b.maxlength)),
            b
        },
        normalizeRule: function(b) {
            if ("string" == typeof b) {
                var c = {};
                a.each(b.split(/\s/),
                function() {
                    c[this] = !0
                }),
                b = c
            }
            return b
        },
        addMethod: function(b, c, d) {
            a.validator.methods[b] = c,
            a.validator.messages[b] = void 0 !== d ? d: a.validator.messages[b],
            c.length < 3 && a.validator.addClassRules(b, a.validator.normalizeRule(b))
        },
        methods: {
            required: function(b, c, d) {
                if (!this.depend(d, c)) return "dependency-mismatch";
                if ("select" === c.nodeName.toLowerCase()) {
                    var e = a(c).val();
                    return e && e.length > 0
                }
                return this.checkable(c) ? this.getLength(b, c) > 0 : a.trim(b).length > 0
            },
            remote: function(b, c, d) {
                if (this.optional(c)) return "dependency-mismatch";
                var e = this.previousValue(c);
                if (this.settings.messages[c.name] || (this.settings.messages[c.name] = {}), e.originalMessage = this.settings.messages[c.name].remote, this.settings.messages[c.name].remote = e.message, d = "string" == typeof d && {
                    url: d
                } || d, e.old === b) return e.valid;
                e.old = b;
                var f = this;
                this.startRequest(c);
                var g = {};
                return g[c.name] = b,
                a.ajax(a.extend(!0, {
                    url: d,
                    mode: "abort",
                    port: "validate" + c.name,
                    dataType: "json",
                    data: g,
                    success: function(d) {
                        f.settings.messages[c.name].remote = e.originalMessage;
                        var g = d === !0 || "true" === d;
                        if (g) {
                            var h = f.formSubmitted;
                            f.prepareElement(c),
                            f.formSubmitted = h,
                            f.successList.push(c),
                            delete f.invalid[c.name],
                            f.showErrors()
                        } else {
                            var i = {},
                            j = d || f.defaultMessage(c, "remote");
                            i[c.name] = e.message = a.isFunction(j) ? j(b) : j,
                            f.invalid[c.name] = !0,
                            f.showErrors(i)
                        }
                        e.valid = g,
                        f.stopRequest(c, g)
                    }
                },
                d)),
                "pending"
            },
            minlength: function(b, c, d) {
                var e = a.isArray(b) ? b.length: this.getLength(a.trim(b), c);
                return this.optional(c) || e >= d
            },
            maxlength: function(b, c, d) {
                var e = a.isArray(b) ? b.length: this.getLength(a.trim(b), c);
                return this.optional(c) || d >= e
            },
            rangelength: function(b, c, d) {
                var e = a.isArray(b) ? b.length: this.getLength(a.trim(b), c);
                return this.optional(c) || e >= d[0] && e <= d[1]
            },
            min: function(a, b, c) {
                return this.optional(b) || a >= c
            },
            max: function(a, b, c) {
                return this.optional(b) || c >= a
            },
            range: function(a, b, c) {
                return this.optional(b) || a >= c[0] && a <= c[1]
            },
            email: function(a, b) {
                return this.optional(b) || /^((([a-z]|\d|[!#\$%&'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+(\.([a-z]|\d|[!#\$%&'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+)*)|((\x22)((((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(([\x01-\x08\x0b\x0c\x0e-\x1f\x7f]|\x21|[\x23-\x5b]|[\x5d-\x7e]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(\\([\x01-\x09\x0b\x0c\x0d-\x7f]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]))))*(((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(\x22)))@((([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.)+(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))$/i.test(a)
            },
            url: function(a, b) {
                return this.optional(b) || /^(https?|s?ftp):\/\/(((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:)*@)?(((\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5]))|((([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.)+(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.?)(:\d*)?)(\/((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)+(\/(([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)*)*)?)?(\?((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)|[\uE000-\uF8FF]|\/|\?)*)?(#((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)|\/|\?)*)?$/i.test(a)
            },
            date: function(a, b) {
                return this.optional(b) || !/Invalid|NaN/.test(new Date(a).toString())
            },
            dateISO: function(a, b) {
                return this.optional(b) || /^\d{4}[\/\-]\d{1,2}[\/\-]\d{1,2}$/.test(a)
            },
            number: function(a, b) {
                return this.optional(b) || /^-?(?:\d+|\d{1,3}(?:,\d{3})+)?(?:\.\d+)?$/.test(a)
            },
            digits: function(a, b) {
                return this.optional(b) || /^\d+$/.test(a)
            },
            creditcard: function(a, b) {
                if (this.optional(b)) return "dependency-mismatch";
                if (/[^0-9 \-]+/.test(a)) return ! 1;
                var c = 0,
                d = 0,
                e = !1;
                a = a.replace(/\D/g, "");
                for (var f = a.length - 1; f >= 0; f--) {
                    var g = a.charAt(f);
                    d = parseInt(g, 10),
                    e && (d *= 2) > 9 && (d -= 9),
                    c += d,
                    e = !e
                }
                return c % 10 === 0
            },
            equalTo: function(b, c, d) {
                var e = a(d);
                return this.settings.onfocusout && e.unbind(".validate-equalTo").bind("blur.validate-equalTo",
                function() {
                    a(c).valid()
                }),
                b === e.val()
            }
        }
    }),
    a.format = a.validator.format
} (jQuery),
function(a) {
    var b = {};
    if (a.ajaxPrefilter) a.ajaxPrefilter(function(a, c, d) {
        var e = a.port;
        "abort" === a.mode && (b[e] && b[e].abort(), b[e] = d)
    });
    else {
        var c = a.ajax;
        a.ajax = function(d) {
            var e = ("mode" in d ? d: a.ajaxSettings).mode,
            f = ("port" in d ? d: a.ajaxSettings).port;
            return "abort" === e ? (b[f] && b[f].abort(), b[f] = c.apply(this, arguments)) : c.apply(this, arguments)
        }
    }
} (jQuery),
function(a) {
    a.extend(a.fn, {
        validateDelegate: function(b, c, d) {
            return this.bind(c,
            function(c) {
                var e = a(c.target);
                return e.is(b) ? d.apply(e, arguments) : void 0
            })
        }
    })
} (jQuery);

function _load() {
		
    }